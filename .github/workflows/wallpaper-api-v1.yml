name: Build and Push Docker Image

on:
  push:
    branches:
      - master  # 你可以根据需要修改为你的主分支，比如 master 或其他
  pull_request:
    branches:
      - master  # 当有 pull request 向 main 分支发起时也会触发构建

jobs:
  build:
    runs-on: ubuntu-latest  # 在 GitHub 的 Ubuntu 环境中运行工作流

    steps:
      # 1. 检出代码
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Echo Secrets
        run: |
          echo "Docker Username: ${{ secrets.DOCKER_USERNAME }}"
          echo "Docker Password: ${{ secrets.DOCKER_PASSWORD }}"

      # 3. 登录 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}


      # 手动创建 /tmp/.buildx-cache
      - name: Ensure cache directory exists
        run: mkdir -p /tmp/.buildx-cache


      # 4. 缓存 Docker 构建层
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 5. 构建 Docker 镜像并推送
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .  # 使用当前目录作为构建上下文
          file: ./Dockerfile  # 指定 Dockerfile 的路径
          push: true  # 设置为 true 表示推送到 Docker Hub
          tags:  ${{ secrets.DOCKER_TAGS }}/wallpaper-api-v1:latest  # 镜像的标签

